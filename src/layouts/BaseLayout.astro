---
import { ClientRouter } from "astro:transitions";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import ScrollToTop from "../components/scroll-to-top";
import { getImage } from "astro:assets";
import { Font } from "astro:assets";
import "../styles/global.css";
let baseUrl = new URL(Astro.request.url).origin;
const metaImage = await getImage({
  src: "https://cdn.erfianugrah.com/Tenhult_3.JPG",
  alt: "Cover image for stoicopa website",
  height: 720,
  width: 1280,
  decoding: "async",
  format: "webp",
  loading: "lazy",
});

const favicon_webp = await getImage({
  src: "https://cdn.erfianugrah.com/ea_favicon.png",
  alt: "stoicopa favicon",
  height: 400,
  width: 400,
  decoding: "async",
  loading: "lazy",
  format: "png",
});

const pageTitle = "stoicopa";
const metaDescription = "My personal hamster wheel.";
const {
  image,
  description,
  author,
  pubDate,
  updatedDate,
  title,
  site_name,
  alt,
  is404Page = false,
  hideHeaderFooter = false,
} = Astro.props;

// Schema.org structured data
const personSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Erfi Anugrah",
  url: baseUrl,
  image: `${baseUrl}${favicon_webp.src}`,
  sameAs: [
    "https://mastodon.social/@stoicopa",
    "https://github.com/erfianugrah",
    "https://linkedin.com/in/erfianugrah",
    "https://instagram.com/stoicopa",
  ],
};

const websiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  name: site_name || "stoicopa",
  url: baseUrl,
  description: description || metaDescription,
  potentialAction: {
    "@type": "SearchAction",
    target: `${baseUrl}/search?q={search_term_string}`,
    "query-input": "required name=search_term_string",
  },
};

const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: baseUrl,
    },
  ],
};

// Format dates for structured data
const formattedPubDate = pubDate ? new Date(pubDate).toISOString() : null;
const formattedUpdatedDate = updatedDate
  ? new Date(updatedDate).toISOString()
  : null;
---

<html class="bg-[rgb(244,242,238)] dark:bg-[rgb(34,33,37)]" lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/webp" href={favicon_webp.src} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={new URL(Astro.url.pathname, baseUrl).href} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />

    <!-- Fonts -->
    <Font cssVariable="--font-inconsolata" preload />
    <Font cssVariable="--font-overpass-mono" preload />

    <!-- Basic SEO -->
    <title>{title || pageTitle}</title>
    <meta name="description" content={description || metaDescription} />
    <meta name="author" content={author || "Erfi Anugrah"} />

    <!-- OpenGraph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title || pageTitle} />
    <meta property="og:description" content={description || metaDescription} />
    <meta property="og:site_name" content={site_name || "stoicopa"} />
    <meta
      property="og:image"
      content={image || `${baseUrl}${metaImage?.src}`}
    />
    <meta
      property="og:image:alt"
      content={alt || "Cover image for stoicopa website"}
    />
    <meta property="og:image:width" content="1280" />
    <meta property="og:image:height" content="720" />
    <meta property="og:locale" content="en_US" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title || pageTitle} />
    <meta name="twitter:description" content={description || metaDescription} />
    <meta
      name="twitter:image"
      content={image || `${baseUrl}${metaImage?.src}`}
    />
    <meta
      name="twitter:image:alt"
      content={alt || "Cover image for stoicopa website"}
    />

    <!-- Article-specific metadata -->
    {
      pubDate && (
        <meta property="article:published_time" content={formattedPubDate} />
      )
    }
    {
      updatedDate && (
        <meta property="article:modified_time" content={formattedUpdatedDate} />
      )
    }
    <meta property="article:author" content={author || "Erfi Anugrah"} />

    <!-- Structured Data -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify(personSchema)}
    />
    <script
      type="application/ld+json"
      set:html={JSON.stringify(websiteSchema)}
    />
    <script
      type="application/ld+json"
      set:html={JSON.stringify(breadcrumbSchema)}
    />

    <ClientRouter />
  </head>
  <body
    class="flex flex-col flex-wrap justify-between md:pt-8 md:pr-16 md:pb-8 md:pl-16 p-8 max-w-full min-h-screen dark:bg-[rgb(34,33,37)] dark:text-[rgb(245,245,245)]"
  >
    {!hideHeaderFooter && <Header is404Page={is404Page} />}
    <slot />
    <ScrollToTop client:load />
    {!hideHeaderFooter && <Footer />}
  </body>
</html>
<style is:global>
  .astro-code,
  .astro-code span {
    background-color: var(--shiki-light-bg) !important;
    color: var(--shiki-light) !important;
    font-style: var(--shiki-light-font-style) !important;
    font-weight: var(--shiki-light-font-weight) !important;
    text-decoration: var(--shiki-light-text-decoration) !important;
  }
  .dark .astro-code,
  .dark .astro-code span {
    background-color: var(--shiki-dark-bg) !important;
    color: var(--shiki-dark) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }
</style>
