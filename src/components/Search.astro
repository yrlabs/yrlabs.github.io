---
---

<input
  id="nav-search"
  type="text"
  placeholder="Search it"
  class="search-input dark:bg-slate-800 dark:text-[rgb(245,245,245)]"
/>

<div
  id="modal"
  class="modal bg-[rgb(245,245,245)]  dark:bg-slate-800 text-black dark:text-[rgb(245,245,245)]" >
  <div
    class="modal-content bg-[rgb(245,245,245)]  dark:bg-slate-800 text-black dark:text-[rgb(245,245,245)]"
  >
    <input
      id="search"
      type="text"
      placeholder="Search it"
      class="search-input dark:bg-slate-800 text-black dark:text-[rgb(245,245,245)]"
    />
    <div
      id="results"
      class="search-results bg-[rgb(245,245,245)]  dark:bg-slate-800 text-black dark:text-[rgb(245,245,245)]"
    >
    </div>
  </div>
</div>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const modal = document.querySelector("#modal");
    const navSearchInput = document.querySelector("#nav-search");
    const modalSearchInput = document.querySelector("#search");

    navSearchInput?.addEventListener("click", (e) => {
      // Show the modal when the search field is clicked
      modal.style.display = "block";
      // Focus on the search field inside the modal
      modalSearchInput.focus();
    });

    modalSearchInput?.addEventListener("input", async (e) => {
      // only load the pagefind script once
      if (e.target.dataset.loaded !== "true") {
        e.target.dataset.loaded = "true";
        // load the pagefind script
        window.pagefind = await import("/pagefind/pagefind.js");
      }

      // search the index using the input value
      const search = await window.pagefind.search(e.target.value);

      // clear the old results
      document.querySelector("#results").innerHTML = "";

      // add the new results
      for (const result of search.results) {
        const data = await result.data();
        document.querySelector("#results").innerHTML += `
        <a href="${data.url}" class="result-link dark:text-white m-4">
          <h3 class="result-title text-2xl font-bold underline">${data.meta.title}</h3>
          <p class="result-excerpt text-base">${data.excerpt}</p>
        </a>`;
      }

      // Show the modal after the query is made
      if (search.results.length > 0) {
        modal.style.display = "block";
      } else {
        modal.style.display = "none";
      }
    });

    // Hide the modal when user clicks outside of it
    window.onclick = function (event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    };
  });
</script>
<style>
  .search-input {
    width: 100%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
  }

  .search-results {
    margin-top: 10px;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    max-height: 300px; /* Set a maximum height */
    overflow-y: auto; /* Make it scrollable */
  }

  .search-results a {
    display: block;
    padding: 10px;
    border-bottom: 1px solid #eee;
    color: #333;
    text-decoration: none;
  }

  .search-results a:last-child {
    border-bottom: none;
  }

  .search-results a:hover {
    background-color: #f5f5f5;
  }

  /* Dark mode styles */
  @media (prefers-color-scheme: dark) {
    .modal {
      background-color: #333; /* Dark background for the modal */
    }

    .modal-content {
      color: #fff; /* Light text color for the modal content */
    }

    .search-results a {
      color: #fff; /* Light text color for the search results */
      border-bottom: 1px solid #666; /* Dark border color for the search results */
    }

    .search-results a:hover {
      background-color: #555; /* Dark background color for the search results on hover */
    }
  }
  .search-results h3 {
    margin: 0 0 5px;
    font-size: 16px;
  }

  .search-results p {
    margin: 0;
    font-size: 14px;
    color: #666;
  }
  .modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0, 0, 0); /* Fallback color */
    background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
  }

  /* Modal Content/Box */
  .modal-content {
    margin: auto; /* Center the modal */
    border: 1px solid #888;
    width: 50%; /* Adjust the width of the modal */
    max-height: 80%; /* Adjust the max height of the modal */
    overflow: auto; /* Add scroll if needed */
    position: absolute; /* Position the modal */
    top: 50%; /* Position the modal vertically at the center */
    left: 50%; /* Position the modal horizontally at the center */
    transform: translate(-50%,-50%); /* Use translate to adjust the position of the modal */
  }

  @media (max-width: 600px) {
    .modal-content {
      width: 350px; /* Make the modal full width */
      height: 150px; /* Adjust the height of the modal */
      margin-top: 200px;
    }
  }
</style>
